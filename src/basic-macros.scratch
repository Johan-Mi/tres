(macro then do)
(macro else do)

(macro true "true")
(macro false "false")

(macro (!= a b)
       (not (= ,a ,b)))

(macro (-= a b)
       (+= ,a (- ,b)))

(macro (++= a b)
       (:= ,a (++ ,a ,b)))

(macro ([]+= lst idx val)
       (replace ,lst ,idx (+ (!! ,lst ,idx) ,val)))

(macro (!!- lst idx)
       (!! ,lst (- (length ,lst) ,idx)))

(macro (last-of lst)
       (!! ,lst "last"))

(macro (delete-last lst)
       (delete ,lst "last"))

(macro (replace-last lst val)
       (replace ,lst "last" ,val))

(macro (is-number str)
       (or (= 0 ,str)
           (= ,str (+ 0 ,str))))

(macro (pop)
       (delete-last stack))

(macro (pop-to var)
       (do
         (:= ,var (last-of stack))
         (pop)))

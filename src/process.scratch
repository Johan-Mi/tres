(sprite "main"
  (variables process-table)

  (proc (processes-init)
    (vec-new)
    (pop-to process-table))

  (proc (processes-step)
    (variables deadlocked process waker)
    (:= deadlocked true)

    (for process (vec.size process-table)
      ; Iterate in reverse so processes can be removed without interfering with
      ; the next iteration
      (:= process (- (+ 1 (vec.size process-table)) process))

      (:= process (vec.at process-table process))
      (unless (= (interp.status process) INTERP-STATUS-ASLEEP)
        (:= deadlocked false)
        (interp-step process)

        ; Remove the process from the table if it's dead
        (when (= INTERP-STATUS-DEAD (interp.status process))
          (for waker (vec.size (interp.wakers process))
            (interp-awaken (vec.at (interp.wakers process) waker)))
          (vec-remove-first-occurence process-table process))))
    (assert (= deadlocked false)
            "processes-step: no processes ran, system is deadlocked")))
